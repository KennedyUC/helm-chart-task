kind: Deployment
apiVersion: apps/v1
metadata:
 name: {{ .Values.backend.name }}
spec:
  selector:
    matchLabels:
      service: {{ .Values.backend.name }}
  replicas: {{ .Values.backend.replicas }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
      labels:
        service: {{ .Values.backend.name }}
    spec:
      containers:
      - image: {{ .Values.backend.image }}:{{ .Values.backend.tag }}
        name: {{ .Values.backend.name }}
        imagePullPolicy: Always
        resources:
          {{- if .Values.deployment.resources.requests }}
          requests:
            memory: {{ .Values.deployment.resources.requests.memory | default "100Mi" | quote }}
            cpu: {{ .Values.deployment.resources.requests.cpu | default "10m" | quote }}
          {{- else }}
          requests:
            memory: "100Mi"
            cpu: "10m"
          {{- end }}

          {{- if .Values.deployment.resources.limits }}
          limits:
            memory: {{ .Values.deployment.resources.limits.memory | default "2048Mi" | quote }}
            cpu: {{ .Values.deployment.resources.limits.cpu | default "500m" | quote }}
          {{- else }}
          limits:
            memory: "2048Mi"
            cpu: "500m"
          {{- end }}

        env:
        - name: URL
          valueFrom:
            configMapKeyRef:
              name: env-config
              key: URL
        - name: AWS_BUCKET
          valueFrom:
            configMapKeyRef:
              name: env-config
              key: AWS_BUCKET
        - name: AWS_PROFILE
          valueFrom:
            configMapKeyRef:
              name: env-config
              key: AWS_PROFILE
        - name: AWS_REGION
          valueFrom:
            configMapKeyRef:
              name: env-config
              key: AWS_REGION
        - name: JWT_SECRET
          valueFrom:
            configMapKeyRef:
              name: env-config
              key: JWT_SECRET
        - name: POSTGRES_DB
          valueFrom:
            configMapKeyRef:
              name: env-config
              key: POSTGRES_DB
        - name: POSTGRES_HOST
          valueFrom:
            configMapKeyRef:
              name: env-config
              key: POSTGRES_HOST
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: env-secret
              key: POSTGRES_PASSWORD
        - name: POSTGRES_USERNAME
          valueFrom:
            secretKeyRef:
              name: env-secret
              key: POSTGRES_USERNAME
        volumeMounts:
        - name: aws-secret
          mountPath: "/root/.aws/"
          readOnly: true
      restartPolicy: Always
      volumes:
      - name: aws-secret
        secret:
          secretName: aws-secret